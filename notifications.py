import logging
from datetime import datetime, timedelta
from telegram.ext import ContextTypes
from data_manager import data_manager
import random
from telegram import Bot
from telegram.error import Forbidden

# –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É—Ç—Ä–∞
MORNING_MESSAGES = [
    "üåü –ù–æ–≤—ã–π –¥–µ–Ω—å - –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!",
    "üåÖ –°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!",
    "üí™ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Ü–µ–ª–∏!",
    "üéØ –ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∫ –±–æ–ª—å—à–æ–π —Ü–µ–ª–∏!",
    "‚ú® –¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!"
]

async def send_message_safely(bot, chat_id: str, text: str) -> bool:
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        await bot.send_message(chat_id=chat_id, text=text)
        return True
    except Forbidden as e:
        if "bot was blocked by the user" in str(e):
            logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
        return False
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")
        return False

async def send_morning_message(context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É—Ç—Ä–µ–Ω–Ω–µ–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    users = data_manager.get_all_users()
    today = datetime.now()
    
    for user in users:
        user_id = user['user_id']
        stats = data_manager.get_user_stats(user_id)
        
        message = (
            f"üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {user['name']}!\n\n"
            f"–î–µ–Ω—å {stats['marathon_progress']} –∏–∑ 90\n"
            f"{random.choice(MORNING_MESSAGES)}\n\n"
            f"üí™ –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É (–∫–∞—Ä–¥–∏–æ –∏–ª–∏ —Å–∏–ª–æ–≤–∞—è)\n"
            f"üìù –í–Ω–æ—Å–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞!"
        )
        
        await send_message_safely(context.bot, user_id, message)

async def send_evening_reminders(context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–µ—á–µ—Ä–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö"""
    users = data_manager.get_all_users()
    today = datetime.now()
    is_friday = today.weekday() == 4
    
    for user in users:
        user_id = user['user_id']
        stats = data_manager.get_user_stats(user_id)
        reminders = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–µ–º—ã –ø–∏—â–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –º–∏–Ω–∏–º—É–º 3)
        if stats['today_meals'] < 3:
            reminders.append(
                f"üçΩ –ù–µ –∑–∞–±—É–¥—å –≤–Ω–µ—Å—Ç–∏ –ø—Ä–∏–µ–º—ã –ø–∏—â–∏ (–º–∏–Ω–∏–º—É–º 3, —Å–µ–π—á–∞—Å {stats['today_meals']})"
            )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–Ω—É–∂–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ - –∫–∞—Ä–¥–∏–æ –ò–õ–ò —Å–∏–ª–æ–≤–∞—è)
        if not stats['today_cardio'] and not stats['today_strength']:
            reminders.append(
                "üí™ –ù–µ –∑–∞–±—É–¥—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É (–∫–∞—Ä–¥–∏–æ –∏–ª–∏ —Å–∏–ª–æ–≤—É—é)"
            )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Å —Ç–æ–ª—å–∫–æ –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º
        if is_friday:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –≤–Ω–µ—Å–µ–Ω –≤–µ—Å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
            user_data = data_manager.load_user_data(user_id)
            weight_history = user_data.get('weight_history', [])
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è
            last_weight_date = None
            if weight_history:
                last_weight = weight_history[-1]
                last_weight_date = datetime.strptime(last_weight['date'], '%Y-%m-%d')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ
            start_of_week = today - timedelta(days=today.weekday())
            if not last_weight_date or last_weight_date < start_of_week:
                reminders.append("‚öñÔ∏è –ù–µ –∑–∞–±—É–¥—å –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–π –≤–µ—Å –∑–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if reminders:
            message = (
                f"üëã –ü—Ä–∏–≤–µ—Ç, {user['name']}!\n\n"
                f"–ù–∞–ø–æ–º–∏–Ω–∞—é –æ –≤–∞–∂–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö:\n"
                + "\n".join(reminders) + "\n\n"
                f"üí° –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n"
                f"‚Ä¢ –ö–∞—Ä–¥–∏–æ: 5-6 —Ä–∞–∑\n"
                f"‚Ä¢ –°–∏–ª–æ–≤–∞—è: 2-3 —Ä–∞–∑–∞\n"
                f"‚Ä¢ HIIT: 1-2 —Ä–∞–∑–∞\n\n"
                f"üí™ –¢—ã —Å–º–æ–∂–µ—à—å! –î–µ–π—Å—Ç–≤—É–π!"
            )
            
            await send_message_safely(context.bot, user_id, message)

def setup_notifications(application):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    # –£—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ 9:00
    application.job_queue.run_daily(
        send_morning_message,
        time=datetime.strptime("09:00", "%H:%M").time()
    )
    
    # –í–µ—á–µ—Ä–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ 20:00
    application.job_queue.run_daily(
        send_evening_reminders,
        time=datetime.strptime("20:00", "%H:%M").time()
    ) 