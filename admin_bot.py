import logging
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler, ConversationHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω-–±–æ—Ç–∞
ADMIN_BOT_TOKEN = "7309333364:AAEtFe6dumrnmkuhE_X-XdwfsY27nC6YbHE"

# –°–æ—Å—Ç–æ—è–Ω–∏—è
WAITING_COMMENT = 1

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –Ø –∞–¥–º–∏–Ω-–±–æ—Ç –¥–ª—è FitTracking.\n'
        '–ß–µ—Ä–µ–∑ –º–µ–Ω—è —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await update.message.reply_text(
        '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
        '/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n'
        '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n'
        '/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞'
    )

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
    await update.message.reply_text(
        '‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ\n'
        f'‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now().strftime("%d.%m.%Y %H:%M:%S")}'
    )

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å–∏–∫–∏

    action, user_id, meal_number = query.data.split('_')
    user_id = int(user_id)

    main_bot = Application.builder().token("8059566571:AAHBiyib0-MNkXauZjotBPajo8LzI7O203Q").build()

    try:
        if action == "approve":
            await main_bot.bot.send_message(
                chat_id=user_id,
                text=f'‚úÖ –¢—Ä–µ–Ω–µ—Ä –æ–¥–æ–±—Ä–∏–ª —Ç–≤–æ–π {meal_number} –ø—Ä–∏—ë–º –ø–∏—â–∏!'
            )
            await query.edit_message_caption(
                caption=f'{query.message.caption}\n\n‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ',
                reply_markup=None
            )
        
        elif action == "reject":
            await main_bot.bot.send_message(
                chat_id=user_id,
                text=f'‚ùå –¢—Ä–µ–Ω–µ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Å—Ç–∞–≤ {meal_number} –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏.'
            )
            await query.edit_message_caption(
                caption=f'{query.message.caption}\n\n‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
                reply_markup=None
            )
        
        elif action == "comment":
            context.user_data['comment_for'] = {
                'user_id': user_id,
                'meal_number': meal_number
            }
            await query.message.reply_text(
                '–ù–∞–ø–∏—à–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:',
            )
            return WAITING_COMMENT

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
        await query.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        await main_bot.shutdown()

async def handle_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    comment_data = context.user_data.get('comment_for')
    if not comment_data:
        return ConversationHandler.END

    user_id = comment_data['user_id']
    meal_number = comment_data['meal_number']
    comment = update.message.text

    main_bot = Application.builder().token("8059566571:AAHBiyib0-MNkXauZjotBPajo8LzI7O203Q").build()

    try:
        await main_bot.bot.send_message(
            chat_id=user_id,
            text=f'üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ç—Ä–µ–Ω–µ—Ä–∞ –∫ {meal_number} –ø—Ä–∏—ë–º—É –ø–∏—â–∏:\n\n{comment}'
        )
        await update.message.reply_text('‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {e}")
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        await main_bot.shutdown()
        del context.user_data['comment_for']

    return ConversationHandler.END

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(ADMIN_BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("status", status))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(handle_callback)],
        states={
            WAITING_COMMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_comment)]
        },
        fallbacks=[]
    )
    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main() 